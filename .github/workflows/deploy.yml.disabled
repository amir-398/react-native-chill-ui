name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: |
        cd chill-ui-core
        bun install --frozen-lockfile
        
    - name: Run tests
      run: |
        cd chill-ui-core
        bun run test
        
    - name: Build all variants
      run: |
        bun run clean
        bun run build
        bun run build:hybrid
        bun run build:tailwind
        bun run build:stylesheet
        
    - name: Publish to NPM
      run: |
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## ðŸš€ New Release
          
          This release includes the latest changes and improvements.
          
          ### Changes
          - Bug fixes and improvements
          - New features and enhancements
          - Performance optimizations
          
          ### Installation
          ```bash
          npm install chill-ui@${{ github.ref_name }}
          ```
          
          ### Documentation
          - [README](https://github.com/amirmeb/chill-ui#readme)
          - [API Reference](https://github.com/amirmeb/chill-ui#api-reference)
          
          ---
          *This release was automatically generated.*
        draft: false
        prerelease: false
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./chill-ui-${{ github.ref_name }}.tgz
        asset_name: chill-ui-${{ github.ref_name }}.tgz
        asset_content_type: application/gzip
        
    - name: Deploy to CDN
      run: |
        echo "Deploying to CDN..."
        # Add your CDN deployment logic here
        # For example, upload to AWS S3, Cloudflare, etc.
        
    - name: Update documentation
      run: |
        echo "Updating documentation..."
        # Add your documentation update logic here
        # For example, update GitHub Pages, GitBook, etc.
        
    - name: Notify deployment success
      uses: actions/github-script@v7
      with:
        script: |
          const message = `ðŸŽ‰ **Production Deployment Successful**
          
          **Version:** ${{ github.ref_name }}
          **Environment:** Production
          **Commit:** ${{ github.sha }}
          
          ### Deployment Details
          - âœ… Tests passed
          - âœ… Build successful
          - âœ… Published to NPM
          - âœ… GitHub release created
          - âœ… CDN updated
          - âœ… Documentation updated
          
          ðŸ”— [View Release](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }})
          ðŸ“¦ [NPM Package](https://www.npmjs.com/package/chill-ui)
          
          ---
          *This deployment was automatically triggered.*`;
          
          // You can add Slack/Discord webhook notifications here
          console.log(`Deployment notification: ${message}`);

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: |
        cd chill-ui-core
        bun install --frozen-lockfile
        
    - name: Run tests
      run: |
        cd chill-ui-core
        bun run test
        
    - name: Build all variants
      run: |
        bun run clean
        bun run build
        bun run build:hybrid
        bun run build:tailwind
        bun run build:stylesheet
        
    - name: Publish to NPM (staging)
      run: |
        npm publish --tag staging
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Deploy to staging environment
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment logic here
        
    - name: Run staging tests
      run: |
        echo "Running staging tests..."
        # Add your staging test logic here
        
    - name: Notify staging deployment
      uses: actions/github-script@v7
      with:
        script: |
          const message = `ðŸš€ **Staging Deployment Successful**
          
          **Version:** ${{ github.ref_name }}
          **Environment:** Staging
          **Commit:** ${{ github.sha }}
          
          ### Deployment Details
          - âœ… Tests passed
          - âœ… Build successful
          - âœ… Published to NPM (staging tag)
          - âœ… Staging environment updated
          - âœ… Staging tests passed
          
          ðŸ“¦ [NPM Package (staging)](https://www.npmjs.com/package/chill-ui?activeTab=versions)
          
          ---
          *This deployment was manually triggered.*`;
          
          // You can add Slack/Discord webhook notifications here
          console.log(`Staging deployment notification: ${message}`);

  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development'
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: |
        cd chill-ui-core
        bun install --frozen-lockfile
        
    - name: Run tests
      run: |
        cd chill-ui-core
        bun run test
        
    - name: Build all variants
      run: |
        bun run clean
        bun run build
        bun run build:hybrid
        bun run build:tailwind
        bun run build:stylesheet
        
    - name: Publish to NPM (development)
      run: |
        npm publish --tag development
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Deploy to development environment
      run: |
        echo "Deploying to development environment..."
        # Add your development deployment logic here
        
    - name: Notify development deployment
      uses: actions/github-script@v7
      with:
        script: |
          const message = `ðŸ”§ **Development Deployment Successful**
          
          **Version:** ${{ github.ref_name }}
          **Environment:** Development
          **Commit:** ${{ github.sha }}
          
          ### Deployment Details
          - âœ… Tests passed
          - âœ… Build successful
          - âœ… Published to NPM (development tag)
          - âœ… Development environment updated
          
          ðŸ“¦ [NPM Package (development)](https://www.npmjs.com/package/chill-ui?activeTab=versions)
          
          ---
          *This deployment was manually triggered.*`;
          
          // You can add Slack/Discord webhook notifications here
          console.log(`Development deployment notification: ${message}`);

  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'rollback'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Rollback to previous version
      run: |
        echo "Rolling back to previous version..."
        # Add your rollback logic here
        
    - name: Notify rollback
      uses: actions/github-script@v7
      with:
        script: |
          const message = `ðŸ”„ **Rollback Successful**
          
          **Environment:** Production
          **Rollback Time:** ${new Date().toISOString()}
          
          ### Rollback Details
          - âœ… Previous version restored
          - âœ… Production environment updated
          - âœ… CDN updated
          - âœ… Documentation updated
          
          ---
          *This rollback was manually triggered.*`;
          
          // You can add Slack/Discord webhook notifications here
          console.log(`Rollback notification: ${message}`);
