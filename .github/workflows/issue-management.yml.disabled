name: Issue Management

on:
  issues:
    types: [opened, labeled, unlabeled]
  pull_request:
    types: [opened, closed, labeled, unlabeled]

jobs:
  auto-label:
    name: Auto Label Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    
    steps:
    - name: Auto-label based on title
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          const title = issue.title.toLowerCase();
          const body = issue.body.toLowerCase();
          
          // Priority labels based on keywords
          if (title.includes('critical') || title.includes('urgent') || title.includes('blocking')) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: ['priority: critical']
            });
          } else if (title.includes('high') || title.includes('important')) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: ['priority: high']
            });
          }
          
          // Component labels based on content
          const components = ['box', 'button', 'input', 'dialog', 'avatar', 'chip', 'slider', 'toggle'];
          for (const component of components) {
            if (title.includes(component) || body.includes(component)) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: [`component: ${component}`]
              });
            }
          }
          
          // Variant labels
          const variants = ['core', 'tailwind', 'stylesheet', 'hybrid'];
          for (const variant of variants) {
            if (title.includes(variant) || body.includes(variant)) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: [`variant: ${variant}`]
              });
            }
          }
          
          // Platform labels
          if (title.includes('ios') || body.includes('ios')) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: ['platform: ios']
            });
          }
          if (title.includes('android') || body.includes('android')) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: ['platform: android']
            });
          }
          if (title.includes('web') || body.includes('web')) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: ['platform: web']
            });
          }

  welcome-new-issues:
    name: Welcome New Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    
    steps:
    - name: Welcome comment
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          const isBug = issue.labels.some(label => label.name === 'bug');
          const isFeature = issue.labels.some(label => label.name === 'enhancement');
          
          let welcomeMessage = `## üëã Welcome!
          
          Thank you for opening this issue! We appreciate your contribution to Chill UI.
          
          ### üìã Next Steps:
          - Our team will review this issue and add appropriate labels
          - We'll respond within 2-3 business days
          - Please provide any additional information if requested
          
          ### üîç Quick Links:
          - [Documentation](https://github.com/amirmeb/chill-ui#readme)
          - [Discussions](https://github.com/amirmeb/chill-ui/discussions)
          - [Existing Issues](https://github.com/amirmeb/chill-ui/issues)
          
          ---
          *This is an automated message. Please don't reply to this comment.*`;
          
          if (isBug) {
            welcomeMessage += `
            
            ### üêõ Bug Report Detected
            Please make sure you've provided:
            - Steps to reproduce
            - Expected vs actual behavior
            - Environment details
            - Code sample (if applicable)`;
          }
          
          if (isFeature) {
            welcomeMessage += `
            
            ### ‚ú® Feature Request Detected
            Please make sure you've provided:
            - Clear problem statement
            - Proposed solution
            - Use cases and examples
            - API design considerations`;
          }
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue.number,
            body: welcomeMessage
          });

  stale-issues:
    name: Manage Stale Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Mark stale issues
      uses: actions/stale@v9
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        stale-issue-message: |
          ## ‚è∞ This issue has been marked as stale
          
          This issue hasn't had any activity for 30 days. It will be closed in 7 days if no further activity occurs.
          
          ### What you can do:
          - Add a comment to keep it open
          - Close it if it's no longer relevant
          - Update it with new information
          
          ---
          *This is an automated message.*
        stale-issue-label: 'stale'
        stale-pr-message: |
          ## ‚è∞ This PR has been marked as stale
          
          This PR hasn't had any activity for 30 days. It will be closed in 7 days if no further activity occurs.
          
          ### What you can do:
          - Add a comment to keep it open
          - Close it if it's no longer needed
          - Update it with new changes
          
          ---
          *This is an automated message.*
        stale-pr-label: 'stale'
        days-before-stale: 30
        days-before-close: 7
        exempt-issue-labels: 'priority: critical,priority: high,good first issue,help wanted'
        exempt-pr-labels: 'priority: critical,priority: high'
        operations-per-run: 100

  close-inactive-prs:
    name: Close Inactive PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Close inactive PRs
      uses: actions/github-script@v7
      with:
        script: |
          const { data: prs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            sort: 'updated',
            direction: 'desc'
          });
          
          const thirtyDaysAgo = new Date();
          thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
          
          for (const pr of prs) {
            const updatedAt = new Date(pr.updated_at);
            
            if (updatedAt < thirtyDaysAgo) {
              // Check if PR has critical or high priority labels
              const { data: labels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number
              });
              
              const hasHighPriority = labels.some(label => 
                label.name === 'priority: critical' || label.name === 'priority: high'
              );
              
              if (!hasHighPriority) {
                await github.rest.pulls.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number,
                  state: 'closed'
                });
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: `## üîí PR Closed Due to Inactivity
                  
                  This PR has been automatically closed due to 30 days of inactivity.
                  
                  If you'd like to continue working on this, please:
                  1. Reopen the PR
                  2. Add a comment explaining the delay
                  3. Continue with your changes
                  
                  ---
                  *This is an automated action.*`
                });
                
                console.log(`Closed inactive PR: #${pr.number}`);
              }
            }
          }
