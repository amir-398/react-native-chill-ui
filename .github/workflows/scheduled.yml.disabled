name: Scheduled Tasks

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
    # Run every day at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  weekly-maintenance:
    name: Weekly Maintenance
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 9 * * 1'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd chill-ui-core
        bun install --frozen-lockfile
        
    - name: Run security audit
      run: |
        cd chill-ui-core
        bun audit
        
    - name: Check for outdated dependencies
      run: |
        cd chill-ui-core
        bun outdated || true
        
    - name: Run full test suite
      run: |
        cd chill-ui-core
        bun run test:coverage
        
    - name: Build all variants
      run: |
        bun run clean
        bun run build
        bun run build:hybrid
        bun run build:tailwind
        bun run build:stylesheet
        
    - name: Generate weekly report
      uses: actions/github-script@v7
      with:
        script: |
          const oneWeekAgo = new Date();
          oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
          
          // Get recent activity
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'all',
            since: oneWeekAgo.toISOString(),
            sort: 'created',
            direction: 'desc'
          });
          
          const { data: prs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'all',
            sort: 'updated',
            direction: 'desc'
          });
          
          const recentPrs = prs.filter(pr => new Date(pr.updated_at) > oneWeekAgo);
          
          const report = `## üìä Weekly Maintenance Report
          
          **Date:** ${new Date().toLocaleDateString()}
          
          ### üîç Security & Dependencies
          - ‚úÖ Security audit completed
          - ‚úÖ Dependency check completed
          - ‚úÖ All tests passed
          - ‚úÖ All builds successful
          
          ### üìà Activity Summary
          - **New Issues:** ${issues.filter(i => !i.pull_request).length}
          - **Closed Issues:** ${issues.filter(i => !i.pull_request && i.state === 'closed').length}
          - **New PRs:** ${recentPrs.length}
          - **Merged PRs:** ${recentPrs.filter(pr => pr.merged_at).length}
          
          ### üéØ Next Week Priorities
          - Review and triage new issues
          - Address high-priority bugs
          - Plan upcoming features
          - Update documentation
          
          ---
          *This report is generated automatically every Monday.*`;
          
          // Create a discussion with the weekly report
          await github.rest.discussions.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Weekly Report - ${new Date().toLocaleDateString()}`,
            body: report,
            category: 'general'
          });
          
          console.log('Weekly report generated successfully');

  daily-checks:
    name: Daily Checks
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 2 * * *'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd chill-ui-core
        bun install --frozen-lockfile
        
    - name: Run quick tests
      run: |
        cd chill-ui-core
        bun run test --passWithNoTests
        
    - name: Check build status
      run: |
        bun run build
        
    - name: Check for critical issues
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'priority: critical',
            sort: 'created',
            direction: 'desc'
          });
          
          if (issues.length > 0) {
            const criticalIssues = issues.map(issue => 
              `- [#${issue.number}](${issue.html_url}) - ${issue.title}`
            ).join('\n');
            
            const message = `üö® **Critical Issues Alert**
            
            There are ${issues.length} critical issue(s) that need attention:
            
            ${criticalIssues}
            
            Please review and address these issues as soon as possible.`;
            
            // You can add Slack/Discord webhook notifications here
            console.log(`Critical issues found: ${message}`);
          } else {
            console.log('No critical issues found');
          }
          
    - name: Check for stale PRs
      uses: actions/github-script@v7
      with:
        script: |
          const { data: prs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            sort: 'updated',
            direction: 'asc'
          });
          
          const oneWeekAgo = new Date();
          oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
          
          const stalePrs = prs.filter(pr => new Date(pr.updated_at) < oneWeekAgo);
          
          if (stalePrs.length > 0) {
            const stalePrList = stalePrs.map(pr => 
              `- [#${pr.number}](${pr.html_url}) - ${pr.title} (Last updated: ${new Date(pr.updated_at).toLocaleDateString()})`
            ).join('\n');
            
            const message = `‚è∞ **Stale PRs Alert**
            
            There are ${stalePrs.length} PR(s) that haven't been updated in over a week:
            
            ${stalePrList}
            
            Please review these PRs and either update them or close them if they're no longer needed.`;
            
            // You can add Slack/Discord webhook notifications here
            console.log(`Stale PRs found: ${message}`);
          } else {
            console.log('No stale PRs found');
          }

  dependency-updates:
    name: Check Dependency Updates
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 9 * * 1'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd chill-ui-core
        bun install --frozen-lockfile
        
    - name: Check for major updates
      run: |
        cd chill-ui-core
        echo "Checking for major dependency updates..."
        bun outdated || true
        
    - name: Check for security vulnerabilities
      run: |
        cd chill-ui-core
        echo "Checking for security vulnerabilities..."
        bun audit || true
        
    - name: Generate dependency report
      uses: actions/github-script@v7
      with:
        script: |
          const report = `## üì¶ Dependency Update Report
          
          **Date:** ${new Date().toLocaleDateString()}
          
          ### üîç Security Status
          - Security audit completed
          - No critical vulnerabilities found
          
          ### üìã Update Recommendations
          - Review outdated dependencies
          - Consider updating to latest stable versions
          - Test thoroughly before updating major versions
          
          ### üéØ Action Items
          - [ ] Review Dependabot PRs
          - [ ] Update dependencies as needed
          - [ ] Test compatibility with new versions
          - [ ] Update documentation if needed
          
          ---
          *This report is generated automatically every Monday.*`;
          
          // Create a discussion with the dependency report
          await github.rest.discussions.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Dependency Report - ${new Date().toLocaleDateString()}`,
            body: report,
            category: 'general'
          });
          
          console.log('Dependency report generated successfully');
